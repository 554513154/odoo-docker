#!/bin/bash
#
# This script is designed to be run inside the container
#

# fail hard and fast even on pipelines
set -eo pipefail

log_src='['${0##*/}']'

function help {
    set +e
    cat bin/help.txt
    set -e
}

function login  {
    echo $log_src[`date +%F.%H:%M:%S`]' Running bash'
    set +e
    if [[ ! -e $1 && $1 = "root" ]]; then
        /bin/bash
    else
        sudo su - odoo
    fi
    SERVICE_PID=$!
    set -e
}

function _update_odoo_conf_param {
    if [ "$2" ]; then
        echo $log_src[`date +%F.%H:%M:%S`]' Replacing parameter '$1
        sudo -i -u \#$TARGET_ID sed -i "s/$1/$2/g" $odoo_conf_file
    fi
}

function start {
    echo $log_src[`date +%F.%H:%M:%S`]' Checking special requirements...'
    bash /opt/scripts/startup.sh

    echo $log_src[`date +%F.%H:%M:%S`]' Updating Odoo conf...'
    _update_odoo_conf_param '_ADMIN_PASSWORD_' $ADMIN_PASSWORD
    _update_odoo_conf_param '_DB_USER_' $DB_USER
    _update_odoo_conf_param '_DB_PASSWORD_' $DB_PASSWORD
    _update_odoo_conf_param '_DB_FILTER_' $DB_FILTER
    echo $log_src[`date +%F.%H:%M:%S`]' Update Odoo conf done'

    echo $log_src[`date +%F.%H:%M:%S`]' Check if need to download addons repo...'
    if [ "$ADDONS_REPO" -o -a /opt/odoo/additional_addons/oca_dependencies.txt ]; then
        echo $log_src[`date +%F.%H:%M:%S`]' Git config for target user'
        sudo -i -u \#$TARGET_ID git config --global user.email "contact@elico-corp.com"
        sudo -i -u \#$TARGET_ID git config --global user.name "Elico Corp - Odoo Docker"

        echo $log_src[`date +%F.%H:%M:%S`]' Checking if need to setup SSH key...'
        if [ -a /opt/odoo/ssh/id_rsa ]; then
            echo $log_src[`date +%F.%H:%M:%S`]' Setting up SSH key...'
            SSH_FOLDER=$( getent passwd $TARGET_ID | cut -d: -f6 )/.ssh
            echo $log_src[`date +%F.%H:%M:%S`]' Creating SSH folder = '$SSH_FOLDER
            mkdir $SSH_FOLDER
            echo $log_src[`date +%F.%H:%M:%S`]' Copy SSH private key from /opt/odoo/ssh'
            cp /opt/odoo/ssh/id_rsa $SSH_FOLDER
            echo $log_src[`date +%F.%H:%M:%S`]' Scanning GitHub key...'
            ssh-keyscan github.com > $SSH_FOLDER/known_hosts
            echo $log_src[`date +%F.%H:%M:%S`]' Setup SSH config...'
            echo "host github.com" > $SSH_FOLDER/config
            echo "    HostName github.com" >> $SSH_FOLDER/config
            echo "    User git" >> $SSH_FOLDER/config
            echo "    IdentityFile $SSH_FOLDER/id_rsa" >> $SSH_FOLDER/config
            echo $log_src[`date +%F.%H:%M:%S`]' Securing SSH folder...'
            chown -R $TARGET_ID:$TARGET_ID $SSH_FOLDER
            chmod 400 $SSH_FOLDER/id_rsa
            echo $log_src[`date +%F.%H:%M:%S`]' Setup SSH key done'
        fi

        if [[ -z "$FETCH_OCA_DEPENDENCIES" ]]; then
            echo $log_src[`date +%F.%H:%M:%S`]' Fetch dependencies undefined, set to True'
            FETCH_OCA_DEPENDENCIES=True
        fi

        echo $log_src[`date +%F.%H:%M:%S`]' Downloading additional addons...'
        sudo -i -u \#$TARGET_ID python /opt/odoo/auto_addons/addons.py $FETCH_OCA_DEPENDENCIES $ADDONS_REPO
    else
        echo $log_src[`date +%F.%H:%M:%S`]' No additional addons to download'
        sudo -i -u \#$TARGET_ID bash /opt/odoo/auto_addons/no_addons.sh $odoo_conf_file
    fi

    echo $log_src[`date +%F.%H:%M:%S`]' Running odoo...'
    set +e
    if [ ! -e $1 ]; then
        echo $log_src[`date +%F.%H:%M:%S`]' ...with additional args: $*'
    fi
    sudo -i -u \#$TARGET_ID /usr/bin/python \
                    /opt/odoo/sources/odoo/openerp-server \
                    -c $odoo_conf_file \
                    $*

    SERVICE_PID=$!
    set -e
}

# smart shutdown on SIGINT and SIGTERM
function on_exit() {
    kill -TERM $SERVICE_PID
    wait $SERVICE_PID 2>/dev/null
    exit 0
}
trap on_exit INT TERM

echo $log_src[`date +%F.%H:%M:%S`]' Search for target user...'
bash /opt/sources/target_user.sh

if [[ -z "$TARGET_ID" ]]; then
    echo $log_src[`date +%F.%H:%M:%S`]' No target user, falling back to odoo'
    TARGET_ID=$( id -u odoo )
fi

echo $log_src[`date +%F.%H:%M:%S`]' Search conf file...'
if [[ -z "$odoo_conf_file" ]]; then
    odoo_conf_file="/opt/odoo/etc/odoo.conf"
fi

echo $log_src[`date +%F.%H:%M:%S`]' Running command...'
for arg in "$*"
do
    $arg
done

wait